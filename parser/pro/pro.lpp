%{
// --------------------------------------------------------------------------------
// MIT License
//
// Copyright (c) 2018 Jens Kallup
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
// --------------------------------------------------------------------------------
#include <stdio.h>
#include <stdlib.h>
#include <strings.h>
#include <ctype.h>
#include <limits.h>
#include <sys/types.h>

#include <QString>
#include <QMessageBox>
#include <QDebug>

extern QString pro_text;

#define YYDEBUG 1

#include "source/parser/pro/pro.tab.hh"

extern int line_no;
extern char *protext;

extern int yyerror(const char*);
extern int prolex();
%}

%option prefix="pro"
%option noyywrap
%option caseless

DIGIT       [0-9\.]
NUM         {DIGIT}+
WS          [ \t\n\r]*
REMS1       ((\/\/.*)|(\&\&.*)|(\/\/.*\n*)|(\&\&.*\n*))*
REMS2       ((\/\*\*\/)|(\/\*(\n*|.*)\*\/))*
REMSER      {WS}{REMS1}|{REMS2}{WS}
IDENT       [a-zA-Z]+[a-zA-Z0-9_\\.]*
STRING      \"(\\.|[^"\\])*\"
STRING_LIT  {STRING}+

%x PRO_COMMENTS
%x PRO_PASCAL_COMMENTS
%x PRO_DELPHI_COMMENTS

%%

\/\/.*            { BEGIN(INITIAL); }
\/\/.*\n          { ++line_no; BEGIN(INITIAL); }

"#".*              { BEGIN(INITIAL);}
"#".*\n            { ++line_no; BEGIN(INITIAL); }

\/\*              { BEGIN(PRO_COMMENTS); }
<PRO_COMMENTS>\*\/    { BEGIN(INITIAL); }
<PRO_COMMENTS>\n      { ++line_no; }
<PRO_COMMENTS>.       ;

\(\*			{ BEGIN(PRO_PASCAL_COMMENTS); }
<PRO_PASCAL_COMMENTS>\*\)	{ BEGIN(INITIAL); }
<PRO_PASCAL_COMMENTS>\n	{ ++line_no; }
<PRO_PASCAL_COMMENTS>.	;

\{			{ BEGIN(PRO_DELPHI_COMMENTS); }
<PRO_DELPHI_COMMENTS>\}	{ BEGIN(INITIAL); }
<PRO_DELPHI_COMMENTS>\n	{ ++line_no; }
<PRO_DELPHI_COMMENTS>.	;


template    { qDebug() << "template"; return _TEMPLATE_; }
target      { qDebug() << "target";   return _TARGET_;   }
sources     { qDebug() << "sources";  return _SOURCES_;  }

{IDENT} { 
    char *txt = (char*) malloc(strlen(protext)+1);
    strcpy(txt,protext);
    
    pro_text.clear();
    pro_text.append(protext);
    
    QMessageBox::information(0,"weweww",txt);
    return _NAME_;
}

{NUM}      { return _NUMBER_; }

"+="    { pro_text = "+="; return _PEQUAL_; }
"="     { pro_text =  "="; return _ASSIGN_; }

[-*/:;,^@{}]      { return *protext; }


[ \t]*              { }
[\n]*               { ++line_no; }
.                   ;
<<EOF>>             { return 0; }
%%
